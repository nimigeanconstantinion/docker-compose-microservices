name: CD - Deploy Docker Compose

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
#      - name: Set build number
#        id: build-number
#        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_ENV
#
#      - name: Checkout code
#        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Docker Build and push
#        run: |
#          chmod +x ci/build-publish.sh
#          USERNAME=ion21 \
#          REPO=command-service \
#          TAG=${{ env.BUILD_NUMBER }} \
#          ci/build-publish.sh ./
##
#  update-docker-compose:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout other repository
#        uses: actions/checkout@v2
#        with:
#          repository: 'nimigeanconstantinion/docker-compose-microservices'
#          token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
#          path: 'docker-compose-microservices'
#
#      - name: Update and commit app version in docker-compose.yml in other repository
#        run: |
#            cd docker-compose-microservices/
#            echo -e "Current ./docker-compose.yaml\n$(cat docker-compose.yaml)"
#            sed -i -E 's_(ion21/command-service:)([^"]*)_\1'${{ env.BUILD_NUMBER }}'_' docker-compose.yaml
#            echo -e "Updated ./docker-compose.yaml\n$(cat docker-compose.yaml)"
#            git config user.name github-actions
#            git config user.email github-actions@github.com
#            git add .
#            git commit -m "new app version: ${{ env.BUILD_NUMBER }}"
#            git push origin HEAD:master

      - name: Deploy to EC2
        run: |
            sudo apt-get update
            sudo apt-get install -y ssh
            mkdir -p ~/.ssh
            echo "Am facut folderul"
            echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            scp -o StrictHostKeyChecking=no ./docker-compose.yaml ubuntu@${{ env.EC2_INSTANCE_IP }}:/home/doker/docker-compose.yaml
            ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_INSTANCE_IP }} "cd /home/doker/ && docker-compose up -d"
        env:
            EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
            EC2_INSTANCE_IP: 3.252.249.66
